MEAN 
> Mongo Express Angular Node

MERN
> Mongo Express React Node
> AWS
> heroku

Basic JavaScript
NPM
Basic NodeJS(in built)(Os,file,http)
NodeJS(full Stack App) (Node-EJS-Mongo-Express)
Third Party Api (Weather Api)
Redis
Email With Node(Sendgrid)
MongoDb Basic
Api with NodeJS(Rest)
DashBoard(Crud)
Oauth(with github)
OO_NodeJs
Login/Logout(JWT)
NodeJs with postgres
GraphQl API
ChatApp
Node-Es6(.babel)
---------------
Testing
--------------
Production Pm2
Nginx
Docker
Github
Heroku

////////////
NPM
> Node Package Manger
> json
> JavaScript Object Notation
[
    {
        "name":"John",
        "class":"ui",
        "isActive":"true"
    },
    {
        "name":"Ammy",
        "class":"Node"
    }
]


> Package.json
# Starting point
# Description
# Meta Data
# Script
# Packages

////////////Step To Create Package.json////////
** NodeJs must be installed in system
> Navigate to the folder using cmd/terminal where you want to create
> npm init
> Answer All question
> Type "yes"

> Local Package
# Folder Specific
# max package will go local
# Normal Dependency
# Dev Dependency => use only at time of development

////////////////////////////////////
Step To Install Local Package
////////////////////////////////
> Navigate to the folder using cmd/terminal where you want to installed
> npm install packageName / npm i packageName
> npm install packageName --save -dev


> Global Package
#Run Build Test Prod

////////////////////////////////////
Step To Install Global Package
////////////////////////////////
#Win
> Run Cmd as admin
**No Need to go in any folder
> npm i -g nodemon

#Mac/Linux
> Open terminal
> sudo npm i -g nodemon

## It will not be a part of package.json
## To install we need admin access

## We need this only at time of development


Math.floor(Math.random()*(99-1))+1


///////
Continoues development
///////
npm i -g nodemon


Dev   =>  Q/A  ==> Prod
^
||

echo 'export PORT='9900'>dev.env
source ./dev.env


//Express Router
//EJS